.tagify{
  $self: &;
  $tags-border-color       : #DDD;
  $tags-hover-border-color : #CCC;
  $tags-focus-border-color : #CCC;

  $tagMargin           : 5px;
  $tagPad              : .3em .5em;
  $tag-text-color      : black;
  $tag-bg              : #E5E5E5;
  $tag-hover           : #D3E2E2;
  $tag-remove          : #D39494;
  $invalid-input-color : $tag-remove;
  $showX               : true;

  @mixin placeholder( $show:true, $opacity:.5 ){
    transition:.2s ease-out;
    @if $show == true {
      opacity:$opacity; transform:none;
    }
    @else {
      opacity:0; transform:translatex(6px);
    }
  }

  display       : block;
  padding       : 0;
  cursor        : text;
  overflow      : hidden;
  height: calc(3.4rem + 0rem);
  font-size: 1rem;
  box-shadow: inset 0 -1px 0 #ddd;
  transition: all 0.2s;

  &:hover{ border-color:$tags-hover-border-color; }

  @keyframes tags--bump{
    30% { transform: scale(1.2); }
  }

  // Global "read-only" mode (no input button)
  &[readonly]{
    cursor: default;
    > #{ $self }__input{
      visibility: hidden;
      width: 0;
      margin: $tagMargin 0;
    }
    x{ display:none; }
    tag > div{ padding: $tagPad; }
  }

  ///////////////////////////////////////////
  // Hides originals
  + input,
  + textarea{ border:0; display:none; }

  tag{
    display        : inline-block;
    margin         : 0.6rem 0 0px 0.5rem;
    vertical-align : top;
    position       : relative;
    z-index        : 1;
    cursor         : default;
    transition     : .13s ease-out;
    line-height			:1.2;

    > div{
      vertical-align : top;
      position       : relative;
      box-sizing     : border-box;
      max-width      : 100%;
      padding        : $tagPad;
      transition     : .13s ease-out;

      > span{
        line-height			:1.2;
        white-space    : nowrap;
        overflow       : hidden;
        text-overflow  : ellipsis;
        display        : inline-block;
        vertical-align : top;
        width          : 100%;
        transition     : .1s;
      }

      @if $showX {
        padding-right:nth($tagPad, 2) * 3;
      }

     
    }



    &#{ $self }{
      &--noAnim{ animation:none; }

      &--hide{
        width          : 0 !important;
        padding-left   : 0;
        padding-right  : 0;
        margin-left    : 0;
        margin-right   : 0;
        opacity        : 0;
        transform      : scale(0);
        transition     : .3s;
        pointer-events : none;
      }

      &--mark{
        div::before{ animation:none; }
      }

      &--notAllowed{
        div{
          > span{ opacity:.5; } // filter:blur(.2px);
          &::before{
            background: rgba($tag-remove, .44);
            transition: .2s;
          }
        }
      }
    }

    &[readonly]{
      x{ display:none; }
      > div{ padding: $tagPad; }
    }

    ///////////////////////////////////////////
    // Close button
    x{
      $size: 14px;

      font          : #{$size}/#{$size} Serif;
      width         : $size;
      height        : $size;
      text-align    : center;
      border-radius : 50px;
      position      : absolute;
      z-index       : 1;
      right         : calc(#{nth($tagPad, 2)} - 2px);
    top           : 50%;
    cursor        : pointer;
    transform     : translateY(-50%);
    transition    : .2s ease-out;

    &::after{
      content:"\00D7";
    }

    &:hover{
      color:white;
      background:darken($tag-remove, 8);
      // + span{ box-shadow: 0 0 0 2px $tag-remove inset; transition:.2s; }
      + div{
        > span{ opacity:.5; } // filter:blur(.2px);
        &::before{ background:rgba($tag-remove, .44); transition:.2s; }
      }
    }
  }
}


///////////////////////////////////////////
// Holds the placeholder & the tags input
#{ $self }__input{ display:inline-block; min-width:110px; margin:$tagMargin; padding:$tagPad; position:relative; vertical-align:top;
  $self: &;

  @mixin placeholder-show{ opacity:.5; transform:none; };

  &:empty::before{ @include placeholder; }

  &:focus{ outline:none;
    &::before{ @include placeholder(false);
      @supports ( -moz-appearance:none ){
        display:none;
      }
    }
    &:empty::before{ @include placeholder(true, .3);
      @supports ( -moz-appearance:none ){
        display:inline-block;
      }
    }
  }
  &:empty:focus{ padding:$tagPad; }

  &::before{
    content: attr(data-placeholder);
    line-height: 1.8;
    position: absolute;
    top: 0;
    z-index: 1;
    color: $tag-text-color;
    white-space: nowrap;
    pointer-events: none;
    opacity: 0;
  }

  @supports ( -moz-appearance:none ){
    &::before{
      line-height: inherit;
      position:relative;
    }
  }

  // tries to suggest the rest of the value from the first item in the whitelist which matches it
  &::after{
    content: attr(data-suggest);
    color: $tag-text-color;
    opacity: .3;
    pointer-events:none;
  }

  &--invalid{
    // color: $invalid-input-color;
  }
}

&__dropdown{
  position: absolute;
  z-index: 999;
  background: white;

  max-height: 300px;
  overflow: auto;
  border: 1px solid $tags-focus-border-color;
  box-shadow: 0 2px 4px -2px rgba(black,.2);
  box-sizing: border-box;


  &__item{
    box-sizing: inherit;
    padding: .35em .6em;
    margin: 2px;
    cursor: pointer;
    border-radius: 3px;

    &--active{ background:$tag-bg; }
  &:active{ background:lighten($tag-bg, 5); }
}
}
}